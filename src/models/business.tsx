/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect} from 'react'
import {useAnimations, useGLTF} from '@react-three/drei'
import * as THREE from "three";
import ModalsInRooms from "../pages/tech-room/const/modals/in_room.tsx";
import StaticCollider from "../components/static-collider.tsx";

interface BusinessModelProps {
    position?: [number, number, number];
    rotation?: [number, number, number];
    scale?: [number, number, number];
}

interface GLTFResult extends THREE.Object3D {
    nodes: {
        [key: string]: THREE.Mesh;
    };
    materials: {
        [key: string]: THREE.Material;
    };
}

export function BusinessModel(props:BusinessModelProps) {
    const { nodes } = useGLTF('/models/BUSINESS.glb') as unknown as GLTFResult

    const floorAnimation = useGLTF("/animations/BUSINESS_FLOOR.glb");
    const { animations: floorAnimations, scene: floorScene } = floorAnimation;
    const { actions: floorActions } = useAnimations(floorAnimations, floorScene);

    const valveAnimation = useGLTF("/animations/BUSINESS_VALVE.glb");
    const { animations: valveAnimations, scene: valveScene } = valveAnimation;
    const { actions: valveActions } = useAnimations(valveAnimations, valveScene);

    useEffect(() => {
        if (floorActions?.Animation) {
            floorActions.Animation.play();
        }

    }, [floorActions]);

    useEffect(() => {
        if (valveActions?.Animation) {
            valveActions.Animation.play();
        }

    }, [valveActions]);

    const currentRoomData = ModalsInRooms.find((roomData) => roomData.name === 'BUSINESS');

    return (
        <group {...props} dispose={null}>
            {Object.entries(nodes).map(([key, node]) => {
                if (node instanceof THREE.Mesh) {
                    return (
                        <group key={node.name}>
                            <StaticCollider object={node} currentRoomData={currentRoomData} key={key}/>
                        </group>
                    );
                }
                return null;
            })}
              <primitive object={floorScene}/>
            <primitive object={valveScene}/>
        </group>
    );
}

// useGLTF.preload('/models/BUSINESS.glb')
// useGLTF.preload("/animations/BUSINESS_FLOOR.glb");
// useGLTF.preload("/animations/BUSINESS_VALVE.glb");
